#!/usr/bin/env bash
#
# Run Docker container.
# (follows https://google.github.io/styleguide/shell.xml)
set -e

readonly CONTAINER_NAME='supertux'
readonly IMAGE_NAME="suckowbiz/${CONTAINER_NAME}"
readonly USER_DATA="${HOME}/.config/supertux2"
if [[ ! -e "${USER_DATA}" ]]; then
    mkdir --parent "${USER_DATA}"
fi

# Enable pulse audio TCP server to connect to and have sound on every container (which is not the case for native socket).
readonly DOCKER_BRIDGE_IP=$(ip --family inet --oneline address show docker0 |grep --extended-regexp --only-matching '([0-9]{1,3}\.){3}[0-9]{1,3}')
readonly PULSE_AUDIO_TCP_MODULE='module-native-protocol-tcp'
readonly PULSE_AUDIO_TCP=$(pactl list modules |grep --silent "${PULSE_AUDIO_TCP_MODULE}"; echo $?)
if [[ "$PULSE_AUDIO_TCP" = "1" ]]; then
    pactl load-module "${PULSE_AUDIO_TCP_MODULE}" auth-ip-acl="${DOCKER_BRIDGE_IP}" 1>/dev/null
fi

# Populate X11 variables PULSE_SERVER and PULSE_COOKIE automatically using a module.
readonly PA_X11_PUBLISH_MODULE='module-x11-publish'
readonly PA_X11_PUBLISHED=$(pactl list modules |grep --silent "${PA_X11_PUBLISH_MODULE}"; echo $?)
if [[ "$PA_X11_PUBLISHED" = "1" ]]; then
    pactl load-module "${PA_X11_PUBLISH_MODULE}" 1>/dev/null
fi

# enable passing display to be able to run any GUI
xhost +local:root > /dev/null 2>&1

# removing previous existing containers to enable start up
docker rm --force --volumes ${CONTAINER_NAME} >/dev/null 2>&1 || true
docker run \
  --detach \
  --device /dev/dri \
  --env DISPLAY \
  --env GIVEN_GROUP=$(id -gn "${USER}") \
  --env GIVEN_GROUP_ID=$(id -g "${USER}") \
  --env GIVEN_USER="${USER}" \
  --env GIVEN_USER_ID="${UID}" \
  --env "PULSE_SERVER=tcp:${DOCKER_BRIDGE_IP}:4713" \
  --name "${CONTAINER_NAME}" \
  --volume /etc/localtime:/etc/localtime:ro \
  --volume /tmp/.X11-unix:/tmp/.X11-unix:ro \
  --volume "${USER_DATA}":/var/lib/supertux2 \
  ${IMAGE_NAME}
