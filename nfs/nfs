#!/usr/bin/env bash
#
# Runs Docker container as stated below.
# (follows https://google.github.io/styleguide/shell.xml)
set -e

remote_directory=${1////-}
remote_directory=${remote_directory/:/}
readonly CONTAINER_NAME="nfs-${remote_directory}"
readonly IMAGE_NAME="suckowbiz/nfs"

# Usage, e.g. nfs-hub 192.168.178.28:/volume1/homes/duke nas /home/duke/Mount/home
readonly NFS_URI="$1"
readonly NFS_DOMAIN="$2"
readonly NFS_MOUNT="$3"

# http://patorjk.com/software/taag/#p=display&h=0&f=Calvin%20S&t=NFS
cat <<EOH

╔╗╔╔═╗╔═╗
║║║╠╣ ╚═╗
╝╚╝╚  ╚═╝
${IMAGE_NAME}

========
Volumes:
========
Mount Point: '${NFS_URI}' @ '${NFS_DOMAIN}' -> '${NFS_MOUNT}' ($(id -u):$(id -g))

EOH

docker rm --volumes "${CONTAINER_NAME}" >/dev/null 2>&1 || true
# Appropriate privilege (Linux: the CAP_SYS_ADMIN capability) is required to mount filesystems.
readonly CONTAINER_ID=$(docker run \
  --detach \
  --hostname ${CONTAINER_NAME} \
  --name "${CONTAINER_NAME}" \
  --volume /etc/localtime:/etc/localtime:ro \
  `# NFS` \
  --cap-add SYS_ADMIN \
  --env NFS_DOMAIN="${NFS_DOMAIN}" \
  --env NFS_URI="${NFS_URI}" \
  --security-opt apparmor:unconfined \
  --rm \
  --tty \
  --volume "${NFS_MOUNT}":"/mnt":shared \
  "${IMAGE_NAME}" "$@")
echo "${CONTAINER_ID}"  
